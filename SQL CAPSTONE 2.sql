--Create a Database "Student2".
CREATE DATABASE STUDENT2;

--Use the Database.
USE STUDENT2;

--Create Table "Student_Info" with following columns.
CREATE TABLE STUDENT_INFO(
                          STU_ID CHAR(5) PRIMARY KEY,
						  STU_NAME CHAR(10) NOT NULL,
						  STU_CLASS CHAR(5) NOT NULL);

--Insert 10 records into "Student_info" table.
INSERT INTO STUDENT_INFO(STU_ID, STU_NAME, STU_CLASS)
VALUES ('S0001', 'JACK', '9TH');
INSERT INTO STUDENT_INFO VALUES ('S0002', 'JOHN', '8TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0003', 'TOM', '9TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0004', 'SANDY', '10TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0005', 'ANDREW', '10TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0006', 'ROSHAN', '8TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0007', 'RAVI', '9TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0008', 'RAJ', '10TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0009', 'GAGAN', '9TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0010', 'AKUL', '8TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0011', 'HENRY', '9TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0012', 'ROHIT', '10TH'); 
INSERT INTO STUDENT_INFO VALUES ('S0013', 'JESSY', '9TH'); 


SELECT * FROM STUDENT_INFO;


--Create table "Student_Personal_info".
CREATE TABLE STUDENT_PERSONAL_INFO(
									STU_ID CHAR(5) PRIMARY KEY,
									STU_ADD VARCHAR(30) NOT NULL,
									STU_PHNO CHAR(14) UNIQUE);

--Insert 10Records into "Student_Personal_Info" Table.
INSERT INTO STUDENT_PERSONAL_INFO(STU_ID, STU_ADD, STU_PHNO)
VALUES ('S0001', 'C/2 CROSS STREET', '6045352010'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0002', 'PARK AVENUE STREET', '6045352011'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0003', 'HIGH RIDGE', '6045352012'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0004', 'GANDHI ROAD', '6045352013'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0005', 'PARIS ROAD', '6045352014'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0006', 'ADDISON STREET', '6045352015'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0007', 'FOREST ROAD', '6045352016'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0008', 'NORTH PENINSULA ROAD', '6045352017'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0009', 'CHIPPEWA FALLS ROAD', '6045352018'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0010', 'CROSS ROAD', '6045352019'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0011', 'JUNCTION ROAD', '6045352020'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0012', 'COMPLEX  STREET', '6045352021'); 
INSERT INTO STUDENT_PERSONAL_INFO VALUES('S0013', 'AVENUE STREET', '6045352022'); 


SELECT * FROM STUDENT_PERSONAL_INFO;


--Create table "Student_Marks".
CREATE TABLE STUDENT_MARKS(
						    STU_ID CHAR(5) PRIMARY KEY,
							STU_MATH_MARKS INT,
							STU_SCIENCE_MARKS INT,
							STU_SOCIAL_MARKS INT,
							STU_ENGLISH_MARKS INT);

--Insert 10 records into "Student_marks" table.
INSERT INTO STUDENT_MARKS(STU_ID, STU_MATH_MARKS, STU_SCIENCE_MARKS, STU_SOCIAL_MARKS, STU_ENGLISH_MARKS)
VALUES ('S0001', 95, 60, 78, 85);
INSERT INTO STUDENT_MARKS VALUES ('S0002', 85, 45, 48, 45);
INSERT INTO STUDENT_MARKS VALUES ('S0003', 75, 77, 92, 91);
INSERT INTO STUDENT_MARKS VALUES ('S0004', 59, 85, 90, 57);
INSERT INTO STUDENT_MARKS VALUES ('S0005', 60, 92, 85, 93);
INSERT INTO STUDENT_MARKS VALUES ('S0006', 67, 48, 41, 98);
INSERT INTO STUDENT_MARKS VALUES ('S0007', 54, 90, 68, 92);
INSERT INTO STUDENT_MARKS VALUES ('S0008', 32, 91, 78, 83);
INSERT INTO STUDENT_MARKS VALUES ('S0009', 55, 44, 88, 52);
INSERT INTO STUDENT_MARKS VALUES ('S0010', 89, 48, 49, 75);
INSERT INTO STUDENT_MARKS VALUES ('S0011', 75, 35, 85, 65);
INSERT INTO STUDENT_MARKS VALUES ('S0012', 52, 60, 88, 59);
INSERT INTO STUDENT_MARKS VALUES ('S0013', 85, 80, 84, 90);


SELECT * FROM STUDENT_MARKS;

-------------------
--DROP 3TO4 CONSTRAINTS FROM THE ABOVE TABLE OF YOUR CHOICE

ALTER TABLE STUDENT_INFO
DROP CONSTRAINT PK__STUDENT___C97EC9640C150F06;

ALTER TABLE STUDENT_PERSONAL_INFO
DROP CONSTRAINT [PK__STUDENT___C97EC964E5CADAF9],
                [UQ__STUDENT___695059DA888E2639];



---------------0----------
---SHOW ALL THE DATA OF THE TABLES

SELECT SI.STU_ID, STU_NAME, STU_CLASS,
       STUDENT_PERSONAL_INFO.STU_ADD, STU_PHNO,
	   STUDENT_MARKS.STU_MATH_MARKS, STU_SCIENCE_MARKS, STU_SOCIAL_MARKS,STU_ENGLISH_MARKS
FROM STUDENT_INFO SI
JOIN STUDENT_PERSONAL_INFO
ON SI.STU_ID = STUDENT_PERSONAL_INFO.STU_ID
JOIN STUDENT_MARKS
ON STUDENT_PERSONAL_INFO.STU_ID = STUDENT_MARKS.STU_ID;


----------------------------------------------------
---FIND THE STUDENTS WHO HAS SCORED MORE THAN 60 IN ALL SUBJECTS ALSO VIEW THE PERSONAL INFO OF STUDENTS.

SELECT STUDENT_INFO.STU_ID, STU_NAME, STU_CLASS,
       STUDENT_PERSONAL_INFO.STU_ADD, STU_PHNO,
	   STUDENT_MARKS.STU_MATH_MARKS, STU_SCIENCE_MARKS, STU_SOCIAL_MARKS,STU_ENGLISH_MARKS
FROM STUDENT_INFO
JOIN STUDENT_PERSONAL_INFO
ON STUDENT_INFO.STU_ID = STUDENT_PERSONAL_INFO.STU_ID
JOIN STUDENT_MARKS
ON STUDENT_PERSONAL_INFO.STU_ID = STUDENT_MARKS.STU_ID
WHERE [STU_MATH_MARKS] >60  AND [STU_SCIENCE_MARKS] >60 AND
      [STU_SOCIAL_MARKS] >60 AND [STU_ENGLISH_MARKS] >60;


------------------------------------------
--DO THE ABOVE QUESTION INSIDE A PROCEDURE NAME TOPPER STUDENTS
    -- USE MULTI JOINS TO FETCH ALL THE STUDENT DETAILS.

GO
CREATE PROCEDURE TOPPER_STUDENTS 
AS
BEGIN
         SELECT STUDENT_INFO.STU_ID, STU_NAME, STU_CLASS,
       STUDENT_PERSONAL_INFO.STU_ADD, STU_PHNO,
	   STUDENT_MARKS.STU_MATH_MARKS, STU_SCIENCE_MARKS, STU_SOCIAL_MARKS,STU_ENGLISH_MARKS
FROM STUDENT_INFO
JOIN STUDENT_PERSONAL_INFO
ON STUDENT_INFO.STU_ID = STUDENT_PERSONAL_INFO.STU_ID
JOIN STUDENT_MARKS
ON STUDENT_PERSONAL_INFO.STU_ID = STUDENT_MARKS.STU_ID
WHERE [STU_MATH_MARKS] >60  AND [STU_SCIENCE_MARKS] >60 AND
      [STU_SOCIAL_MARKS] >60 AND [STU_ENGLISH_MARKS] >60

END;
GO

EXECUTE TOPPER_STUDENTS;


-----------------------------------------
--CREATE A SIMPLE FUNCTION TO CALCULATE STUDENT_PERCENTAGE BY TAKING ID AS INPUT.

GO
CREATE FUNCTION STUDENT_PERCENTAGE(@ID CHAR(5))
RETURNS INT
AS
BEGIN
        RETURN(SELECT ([STU_MATH_MARKS]+
		              [STU_SCIENCE_MARKS]+
					  [STU_SOCIAL_MARKS]+
					  [STU_ENGLISH_MARKS])/4 AS PERCENTAGE FROM STUDENT_MARKS
					  WHERE STU_ID = @ID);
END;
GO

SELECT STU_ID, dbo.STUDENT_PERCENTAGE(STU_ID) AS PERCENTAGE FROM STUDENT_MARKS;

-----------------------------------------
---CREATE TRANSCATION TO DELETE THE STUDENT WHO GOT LESS THAN 60 MARKS IN MATH AND ENGLISH AND SAVE
--THE TRANSACTION T1.

BEGIN TRANSACTION

SAVE TRANSACTION T1 
     DELETE STUDENT_MARKS
	 WHERE STU_MATH_MARKS <60 AND STU_ENGLISH_MARKS <60;

SELECT * FROM STUDENT_MARKS;


---CREATE TRANSCATION TO DELETE THE STUDENT WHO GOT LESS THAN 50 MARKS IN SCIENCE AND SOCIAL AND SAVE
--THE TRANSACTION T2.

BEGIN TRANSACTION

SAVE TRANSACTION T2
                 DELETE STUDENT_MARKS
				 WHERE STU_SCIENCE_MARKS < 50 AND STU_SOCIAL_MARKS < 50;

SELECT * FROM STUDENT_MARKS;

---ROLL BACK TRANSACTION T1.
ROLLBACK TRANSACTION T1;

--Now Rollback Whole Transaction.
ROLLBACK;





      